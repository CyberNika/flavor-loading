//  ==================================================
//  Component: Loading
//
//  State: trans
//
//  Spinner: circle(&, &-bounce, &-zoomfade) rect(&-series) Square
//
//  Description: Style for Loading
//
//  TODO:
//  ==================================================

$globalTeal: #1bbc9b;
$loadingSpinnerHeight: 60px;
$spinnerColor: $globalTeal;

.loading {
  display: inline-block;
  .spinner {
    position: relative;
    margin: 0 auto;
    width: $loadingSpinnerHeight;
    height: $loadingSpinnerHeight;
    text-align: center;
    box-sizing: border-box;
  }

  .circle {  // circle
    border: 5px solid $spinnerColor;
    border-right-color: transparent;
    border-radius: 50%;
    animation: circleWhirl 1.4s infinite linear;

    &-fadeout {  // circle-fadeout
      background-color: $spinnerColor;
      border-radius: 50%;
      animation: circleFadeout 1.4s infinite ease-in-out;
    }

    &-zoomfade {  // circle-zoomfade
      & > span {
        position: absolute;
        content: "";
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: $spinnerColor;
        border-radius: 50%;
        animation: circleZoomfade 2s infinite ease-in-out;
        opacity: 0.6;
      }
      & > .item-1 {
        animation-delay: -1s;
      }
    }
  }

  .ball {  // ball
    &-bounce {  // circle-bounce
      & > span {
        display: inline-block;
        margin: $loadingSpinnerHeight / 3 + 3 3px;
        width: $loadingSpinnerHeight / 3 - 6;
        height: $loadingSpinnerHeight / 3 - 6;
        border-radius: 50%;
        background-color: $spinnerColor;
        animation: ballBounce 1.4s infinite ease-in-out;
      }
      @for $i from 0 to 3 {
        .item-#{$i} {
          animation-delay: (2 - $i) * -0.16s;
        }
      }
    }
  }

  .rect {  // rect
    background-color: $spinnerColor;
    animation: rectRotate 1.4s infinite ease-in-out;

    &-series {  // rect-series
      & > span {
        display: inline-block;
        margin: 0 2px;
        height: 100%;
        width: 6px;
        background-color: $spinnerColor;
        animation: rectSeriesBounce 1.4s infinite ease-in-out;
      }
      @for $i from 0 to 5 {
        .item-#{$i} {
          animation-delay: $i * 0.1 - 1s;
        }
      }
    }
  }

  $transColor: rgba(#FFF, .95);
  &.trans {  // transparent
    .circle {  // circle
      border-color: rgba(255, 255, 255, 0.2);
      border-right-color: $transColor;

      &-fadeout {
        background-color: $transColor;
      }

      &-zoomfade {
        & > span {
          background-color: $transColor;
        }
      }
    }

    .ball{  //ball
      &-bounce {  // circle-bounce
        & > span {
          background-color: $transColor;
        }
      }
    }

    .rect {  // rect
      background-color: $transColor;

      &-series {  //rect-series
        & > span {
          background-color: $transColor;
        }
      }
    }
  }
}

/* circle */
@keyframes circleWhirl {
  0% {
    transform: rotate(0);
  }
  100% {
    transform: rotate(360deg);
  }
}

/* ball-bounce */
@keyframes ballBounce {
  0%,
  80%,
  100% {
    transform: scale(0);
  }
  40% {
    transform: scale(1);
  }
}

/* rect */
@keyframes rectRotate {
  0% {
    transform: perspective(100px) rotate3d(0, 0, 0);
  }
  50% {
    transform: perspective(100px) rotateX(-180deg);
  }
  100% {
    transform: perspective(100px) rotateZ(180deg);
  }
}

/* rect-series */
@keyframes rectSeriesBounce {
  0%,
  40%,
  100% {
    transform: scaleY(0.4);
  }
  20% {
    transform: scaleY(1);
  }
}

/* circle-fadeout */
@keyframes circleFadeout {
  0% {
    transform: scale(0);
  }
  100% {
    transform: scale(1);
    opacity: 0;
  }
}

/* circle-zoomfade */
@keyframes circleZoomfade {
  0%, 100% {
    transform: scale(0);
  }
  50% {
    transform: scale(1);
  }
}
